/*
 * Event.h
 *
 *  Created on: Mar 27, 2017
 *      Author: Kiet Vo
 */

#ifndef EVENTS_EVENT_H_
#define EVENTS_EVENT_H_

#include "../../Si_Type.h"
#include "../../components/Node.h"
#include "../../components/Edge.h"

namespace simul {

/**
 * \ingroup simulation
 * \defgroup events	Events
 *
 */

/**
 * \ingroup events
 *
 * \brief Base class for implementation of events that happen inside a network.
 */
class Event {
	friend class Simulation;

private:
	static double defaultEventLength;
	static double recommendedDuration;

	virtual bool IsValidToSetStartTime(double startTime) = 0;
	virtual void DoSetStartTime(double startTime) = 0;

	void SetUp();
	virtual bool IsValidToSetUp() = 0;
	virtual void DoSetUp() = 0;

	virtual void NotifySimulatorDestroyed() = 0;

protected:
	NodePtr sourceNode;
	NodePtr destNode;

	Event(NodePtr sourceNode, NodePtr destNode);

public:
	static void SetDefaultEventLength(double time);
	static double GetDefaultEventLength();
	static double GetRecommendedDuration();

	virtual ~Event();

	void SetStartTime(double startTime);

	/**
	 * \brief Total data generated by this event.
	 */
	virtual uint64_t GetTotalDataSize() = 0;

	/**
	 * \brief Check if this event has finished successfully.
	 *
	 * This method is implementation-dependent.
	 */
	virtual bool IsSuccessful() = 0;
};

} /* namespace simul */

#endif /* EVENTS_EVENT_H_ */
